# Aliases

alias v='nvim'

alias vv='nvim .'

alias cls='clear'

alias ls='ls -Glash --color'

alias pylatest='pyenv install --list | grep --extended-regexp "^\s*[0-9][0-9.]*[0-9]\s*$" | tail -1'

alias gitlog="git log --graph --abbrev-commit --decorate --format=format:'%C(yellow)%h%C(reset) - %C(dim normal)%aD%C(reset) %C(dim normal)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(bold white)%s%C(reset) %C(normal)- %an%C(reset)'"

alias gitmain='git log origin main --oneline'

alias zshrc='nvim ~/.zshrc'

alias gs='git status'

alias alp='tmux new-session -A -s alphire'

alias lg='lazygit'

alias gitpurge="git branch --merged | grep -Ev '(^\\*|master|main|dev)' | xargs git branch -d && echo 'Merged Branches cleaned âœ¨'"

alias rfb='source ~/.bashrc'

alias viv='exec /usr/bin/flatpak run --branch=stable --arch=x86_64 com.vivaldi.Vivaldi & disown'

alias opd='xdg-open .'

alias obs='exec /usr/bin/flatpak run --branch=stable --arch=x86_64 md.obsidian.Obsidian & disown'

alias cursor='/home/alphire/appimage_bin/cursor . & disown'

gitshowlog() {
  git log --all --oneline --color --format="%H %ad %an %s" --date=short | \
  awk -v commit="$1" '{ 
      # Match long commit hash or short commit hash
      if (substr($1,1,length(commit)) == commit) {
          print "\033[1;32m" substr($1,1,8) "\033[0m" " " "\033[1;32m" $2 " " $3 " " substr($0, length($1) + length($2) + length($3) + length($4) + 4) "\033[0m"; 
          found=1 
      } 
      else if (found && count++ < 5) { 
          print "\033[1;33m" substr($1,1,8) "\033[0m" " " "\033[1;33m" $2 " " $3 " " substr($0, length($1) + length($2) + length($3) + length($4) + 4) "\033[0m" 
      } 
  }'
}

gitpurgerebase() {
    # Prune remote-tracking branches that no longer exist on the remote
    git remote prune origin

    # Find and delete local branches that have gone (no longer exist on the remote)
    git branch -vv | awk '/: gone]/{print $1}' | grep -v '^\*' | xargs -r git branch -D
}
